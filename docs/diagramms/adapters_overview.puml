@startuml AdaptersOverview
title OKW4Robot – Adapter-Einbindung (Treiberübersicht)

package "okw4robot.runtime" {
  class Context {
    +set_adapter(adapter)
    +get_adapter()
    +set_app(name, model)
    +set_window(name)
  }
}

package "okw4robot.keywords" {
  class HostKeywords {
    +Start Host(name)
    +Select Host(name)
    +Stop Host()
  }
  class AppKeywords {
    +Start App(name)
    +Select Window(name)
    +Stop App()
  }
  class WidgetKeywords {
    +ClickOn(name)
    +SetValue(name, value)
    +Select(name, value)
    +TypeKey(name, key)
    +VerifyValue(name, expected)
    ..
    - resolve_widget(name)
  }
}

package "okw4robot.widgets.base" {
  abstract class BaseWidget {
    +adapter
    +locator
    +options
  }
}

package "okw4robot.adapters" {
  interface UiAdapter {
    +click(locator)
    +double_click(locator)
    +input_text(locator, value)
    +get_text(locator)
    +get_value(locator)
    +select_by_label(locator, label)
    ..
  }
  package "selenium_web" {
    class SeleniumWebAdapter {
      +browser
      +sl:SeleniumLibrary
    }
  }
  package "javaRPC" {
    class JavaRpcAdapter {
      +_rpc_call(method, params)
      +click(locator)
      +input_text(locator, value)
      +get_text(locator)
    }
  }
}

HostKeywords --> Context : set_adapter(adapter)
HostKeywords ..> "YAML (Host)\nChrome.yaml (__self__.class)" : lädt Adapterklasse + Args
AppKeywords --> Context : set_app(name, model)
WidgetKeywords ..> Context : resolve via get_adapter()
WidgetKeywords --> BaseWidget : new Widget(adapter, locator, options)
BaseWidget *--> UiAdapter : composition
SeleniumWebAdapter ..|> UiAdapter
JavaRpcAdapter ..|> UiAdapter

note right of HostKeywords
Host-YAML (Beispiel):
Chrome:
  __self__:
    class: okw4robot.adapters.selenium_web.SeleniumWebAdapter
    browser: chrome
  Chrome:
    URL:
      class: ...UrlBar
      locator: { virtual: true }
end note

note right of WidgetKeywords
resolve_widget(name):
- lädt Widgetklasse aus App-YAML
- holt Adapter aus Context
- instanziert Widget(adapter, locator, extras)
end note

note bottom of UiAdapter
UiAdapter ist konzeptionell –
konkrete Adapter bieten eine
einheitliche API (click/get_value/…)
die Widgets rufen diese treiber-
unabhängig auf.
end note

@enduml
